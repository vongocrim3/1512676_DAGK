{"version":3,"sources":["auth/authActionTypes.js","auth/authActions.js","message/MessageInput.js","auth/SignInButton.js","app/Header.js","message/messageActions.js","message/messageActionTypes.js","message/MessageList.js","message/Message.js","user/UsersList.js","user/usersActions.js","user/usersActionTypes.js","user/Users.js","app/App.js","auth/authReducers.js","message/messageReducers.js","app/reducers.js","user/userReducers.js","config.js","index.js"],"names":["SIGNIN","SIGNIN_SUCCESS","SIGNIN_ERROR","signIn","dispatch","type","types","provider","firebase","auth","GoogleAuthProvider","signInWithPopup","then","result","_result$user","user","uid","displayName","photoURL","email","database","ref","concat","set","lastTimeLoggedIn","ServerValue","TIMESTAMP","signInSuccess","catch","error","errorMessage","message","myInput","SignInButton","onSignInClick","this","props","react_default","a","createElement","onClick","Component","Header","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","isUserSignedIn","SignInButton_SignInButton","HeaderContainer","connect","state","authActions","sendMessage","getState","payload","users","objectSpread","push","createdAt","MessageInput","_ref","onKeyUp","_ref2","keyCode","MessageList","_this","_firebaseRef","on","snapshot","_snapshot$val","val","messages","map","msg","off","Message","userMessage","MessageList_MessageList","UsersList","userPayload","keys","reduce","list","toConsumableArray","showUsersList","Users","UsersList_UsersList","App","isSignedIn","uiConfig","signInFlow","signInOptions","PROVIDER_ID","callbacks","componentDidMount","onAuthStateChanged","setState","console","log","app_Header","index_es","size","message_Message","user_Users","initialState","isInProgress","hasError","userMessageInitialState","isSending","isTyping","items","combineReducers","length","undefined","action","userMessageItems","defineProperty","firebaseConfig","apiKey","authDomain","databaseURL","projectId","initializeApp","window","createLogger","reduxMiddlewares","thunk","store","createStore","reducers","applyMiddleware","render","es","app_App","document","querySelector"],"mappings":"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","file":"static/js/main.04f3a57a.chunk.js","sourcesContent":["export const SIGNIN = 'SIGNIN';\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\nexport const SIGNIN_ERROR = 'SIGNIN_ERROR';\n","import * as types from './authActionTypes';\n//import { authConfig } from '../config';\nimport firebase from \"firebase\"\n\nfunction signInSuccess(uid) {\n  return {\n    type: types.SIGNIN_SUCCESS,\n    uid\n  }\n}\n\nfunction signInInProgress() {\n  return {\n    type: types.SIGNIN\n  }\n}\n\nfunction signInError(errorMessage) {\n  return {\n    type: types.SIGNIN_ERROR,\n    errorMessage\n  }\n}\n\nexport function signIn() {\n  return (dispatch) => {\n    dispatch(signInInProgress());\n\n    const provider = new firebase.auth.GoogleAuthProvider();\n    //authConfig.googlePermissions.forEach(permission => provider.addScope(permission));\n\n    firebase.auth().signInWithPopup(provider)\n      .then((result) => {\n        const { user: { uid, displayName, photoURL, email } } = result;\n\n        firebase.database().ref(`users/${ uid }`).set({\n          displayName,\n          photoURL,\n          email,\n          lastTimeLoggedIn: firebase.database.ServerValue.TIMESTAMP\n        });\n\n        dispatch(\n          signInSuccess(uid)\n        );\n      })\n      .catch((error) => {\n        dispatch(signInError(error.message))\n      });\n  }\n}\n","import React from 'react';\nimport { sendMessage } from './messageActions';\n\nlet myInput;\n\nexport default ({ dispatch }) => {\n  return (\n    <input\n      type=\"text\"\n      ref={ (ref) => myInput = ref }\n      onKeyUp={ ({ keyCode }) => {\n        if(keyCode === 13) {\n          dispatch(sendMessage(myInput.value));\n          myInput.value = '';\n        }\n      } }\n    />\n  );\n};\n","import React, { Component } from 'react';\n\nexport default class SignInButton extends Component {\n  render() {\n    const { onSignInClick } = this.props;\n    return <button onClick={ onSignInClick }>Signin Here</button>;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as authActions from '../auth/authActions';\nimport SignInButton from '../auth/SignInButton';\n\nexport class Header extends Component {\n  render() {\n    const { onSignInClick, auth } = this.props;\n    return (\n      <div>\n        { auth.isUserSignedIn ?\n            <p>Welcome { auth.displayName }</p> :\n            <SignInButton onSignInClick={ onSignInClick } auth={ auth }/>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignInClick: () => {\n      dispatch(authActions.signIn())\n    }\n  }\n};\n\nconst HeaderContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\nexport default HeaderContainer;\n","import * as types from './messageActionTypes';\nimport firebase from \"firebase\"\n\nexport const retrieveMessage = ({ uid, displayName, message }) => {\n  return {\n    type: types.RETRIEVE_MESSAGE,\n    uid,\n    displayName,\n    message\n  }\n};\n\nexport const sendMessageInProgress = (payload) => {\n  return {\n    type: types.SEND_MESSAGE,\n    ...payload\n  }\n};\n\nexport const sendMessageSuccess = () => {\n  return {\n    type: types.SEND_MESSAGE_SUCCESS\n  }\n};\n\nexport const sendMessageError = () => {\n  return {\n    type: types.SEND_MESSAGE_ERROR\n  }\n};\n\nexport const sendMessage = (message) => {\n  return (dispatch, getState) => {\n    const { uid } = getState().auth;\n    const { displayName } = getState().users[uid];\n\n    if (uid !== 0) {\n      dispatch( sendMessageInProgress({ uid, displayName, message}) );\n\n      firebase.database().ref('messages').push({\n        uid,\n        displayName,\n        message,\n        createdAt: firebase.database.ServerValue.TIMESTAMP\n      });\n    } else {\n      dispatch( sendMessageError() );\n    }\n  }\n};\n","export const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const SEND_MESSAGE_ERROR = 'SEND_MESSAGE_ERROR';\n\nexport const RETRIEVE_MESSAGE = 'RETRIEVE_MESSAGE';\n","import React, { Component } from 'react';\nimport { retrieveMessage } from './messageActions';\nimport firebase from \"firebase\"\n\nexport default class MessageList extends Component {\n  componentDidMount() {\n    this._firebaseRef = firebase.database().ref('messages');\n    this._firebaseRef.on('child_added', (snapshot) => {\n      const { uid, displayName, message } = snapshot.val();\n      this.props.dispatch( retrieveMessage({ uid, displayName, message }) );\n    });\n  }\n\n  render() {\n    const { messages } = this.props;\n\n    return (\n      <ul>\n        { messages.map(msg => <li>{ msg.displayName + ': ' + msg.message }</li>)}\n      </ul>\n    );\n  }\n\n  componentWillUnmount() {\n    this._firebaseRef.off();\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MessageInput from './MessageInput';\nimport MessageList from './MessageList';\n\nexport class Message extends Component {\n  render() {\n    const { dispatch, userMessage, isUserSignedIn, messages } = this.props;\n\n    return (\n      <div>\n        <MessageList\n          dispatch={ dispatch }\n          messages={ messages }\n        />\n        { isUserSignedIn &&\n            <MessageInput\n              userMessage={ userMessage }\n              dispatch={ dispatch }\n            />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userMessage: state.userMessage,\n    isUserSignedIn: state.auth.isUserSignedIn,\n    messages: state.messages\n  }\n};\n\nexport default connect(\n  mapStateToProps\n)(Message);\n","import React, { Component } from 'react';\nimport { addConnectedUser } from './usersActions';\nimport firebase from \"firebase\"\n\nexport default class UsersList extends Component {\n  componentDidMount() {\n    firebase.database().ref('users').on('child_added', (snapshot) => {\n      this.props.dispatch(\n        addConnectedUser({\n          uid: snapshot.key,\n          userPayload: snapshot.val()\n        })\n      );\n    });\n  }\n\n  /**\n   * showUsersList(<OBJECT>)\n   *\n   * @param users - the users object with uid keys straight from state\n   * @return Array - an array of users objects with uid inside the objects to be used easily in JSX\n     */\n  showUsersList(users) {\n    if(!users) {\n      return [];\n    }\n\n    return Object.keys(users).reduce(\n      (list, uid) => {\n      return [\n        ...list,\n        {\n          uid,\n          ...users[uid]\n        }\n      ];\n    }, []);\n  }\n\n  render() {\n    const { users } = this.props;\n\n    return (\n      <ul>\n        { this.showUsersList(users).map(user => <li>{ user.displayName }</li>) }\n      </ul>\n    );\n  }\n}\n","import * as types from './usersActionTypes';\n\nexport const addConnectedUser = ({ uid, userPayload }) => {\n  return {\n    type: types.USER_LOGGED_IN,\n    uid,\n    userPayload\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UsersList from './UsersList';\n\nexport class Users extends Component {\n  render() {\n    const { dispatch, users } = this.props;\n\n    return (\n      <UsersList\n        dispatch={ dispatch }\n        users={ users }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users\n  }\n};\n\nexport default connect(\n  mapStateToProps\n)(Users);\n","import React, { Component } from \"react\";\nimport Header from './Header';\nimport Message from './../message/Message';\nimport Users from '../user/Users';\nimport { Grid, Cell } from 'react-flexr';\nimport 'react-flexr/styles.css';\nimport firebase from \"firebase\"\n\nclass App extends Component {\n  state = { isSignedIn: false }\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ isSignedIn: !!user })\n      console.log(\"user\", user)\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>React Redux Firebase Chat App</h1>\n        <Header />\n        <Grid>\n          <Cell size='8/12'>\n            <Message />\n          </Cell>\n          <Cell>\n            <Users />\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as types from './authActionTypes';\n\nconst initialState = {\n  isUserSignedIn: false,\n  isInProgress: false,\n  hasError: false,\n  errorMessage: '',\n  uid: 0\n};\n\nexport function auth(state = initialState, action) {\n  switch(action.type) {\n    case types.SIGNIN_SUCCESS:\n      const { uid } = action;\n      return {\n        ...state,\n        isUserSignedIn: true,\n        isInProgress: false,\n        uid\n      };\n    case types.SIGNIN:\n      return {\n        ...state,\n        isInProgress: true\n      };\n    case types.SIGNIN_ERROR:\n      const { errorMessage } = action;\n      return {\n        ...state,\n        hasError: true,\n        errorMessage\n      };\n    default:\n      return state;\n  }\n}\n","import * as types from './messageActionTypes';\n\nexport const userMessageItems = (state, action) => {\n  switch(action.type) {\n    case types.SEND_MESSAGE:\n      const { uid, displayName, message, createdAt } = action;\n      return [\n        ...state,\n        {\n          uid,\n          displayName,\n          message,\n          createdAt\n        }\n      ];\n    case types.SEND_MESSAGE_SUCCESS:\n    case types.SEND_MESSAGE_ERROR:\n    default:\n      return state;\n  }\n};\n\nconst userMessageInitialState = {\n  isSending: false,\n  isTyping: false,\n  items: []\n};\n\nexport const userMessage = (state = userMessageInitialState, action) => {\n  switch(action.type) {\n    case types.SEND_MESSAGE:\n      return {\n        ...state,\n        isSending: true,\n        items: userMessageItems(state.items, action)\n      };\n    case types.SEND_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        isSending: false,\n        hasError: false\n      };\n    case types.SEND_MESSAGE_ERROR:\n      return {\n        ...state,\n        hasError: true,\n        errorMessage: action.errorMessage\n      };\n    default:\n      return state;\n  }\n};\n\nexport const messages = (state = [], action) => {\n  switch(action.type) {\n    case types.RETRIEVE_MESSAGE:\n      const { uid, displayName, message } = action;\n\n      return [\n        ...state,\n        {\n          uid,\n          displayName,\n          message\n        }\n      ];\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport * as authReducers from './../auth/authReducers';\nimport * as messageReducers from './../message/messageReducers';\nimport * as usersReducers from './../user/userReducers';\n\nexport default combineReducers({\n  auth: authReducers.auth,\n  userMessage: messageReducers.userMessage,\n  messages: messageReducers.messages,\n  users: usersReducers.users\n});\n","import * as types from './usersActionTypes';\n\nexport const users = (state = {}, action) => {\n  switch(action.type) {\n    case types.USER_LOGGED_IN:\n      const { uid, userPayload } = action;\n\n      return {\n        ...state,\n        [uid]: {\n          ...userPayload\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import firebase from \"firebase\"\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyClDuO_AtFxw4Uu52o2dJGbYPgX-pMXMeA\",\n  authDomain: \"reactjs-firebase-88e5e.firebaseapp.com\",\n  databaseURL: \"https://reactjs-firebase-88e5e.firebaseio.com\",\n  projectId: \"reactjs-firebase-88e5e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\nconst GoogleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { firebase, GoogleAuthProvider, database as default };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app/App';\nimport reducers from './app/reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport createLogger from 'redux-logger'\nimport { firebaseConfig } from './config';\nimport firebase from \"firebase\"\n\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nif (window.firebase) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst loggerMiddleware = createLogger();\nconst reduxMiddlewares = isDevelopment ?\n  [thunk, loggerMiddleware]:\n  [thunk];\n\nconst store = createStore(\n  reducers,\n  applyMiddleware.apply(undefined, reduxMiddlewares)\n);\n\n// Dispatch initialization action here\n\nrender(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.querySelector('#react-container')\n);\n"],"sourceRoot":""}